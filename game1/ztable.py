	

s = '''
0.00	0.0000	0.5000
0.01	0.0040	0.4960
0.02	0.0080	0.4920
0.03	0.0120	0.4880
0.04	0.0160	0.4840
0.05	0.0199	0.4801
0.06	0.0239	0.4761
0.07	0.0279	0.4721
0.08	0.0319	0.4681
0.09	0.0359	0.4641
0.10	0.0398	0.4602
0.11	0.0438	0.4562
0.12	0.0478	0.4522
0.13	0.0517	0.4483
0.14	0.0557	0.4443
0.15	0.0596	0.4404
0.16	0.0636	0.4364
0.17	0.0675	0.4325
0.18	0.0714	0.4286
0.19	0.0753	0.4247
0.20	0.0793	0.4207
0.21	0.0832	0.4168
0.22	0.0871	0.4129
0.23	0.0910	0.4090
0.24	0.0948	0.4052
0.25	0.0987	0.4013
0.26	0.1026	0.3974
0.27	0.1064	0.3936
0.28	0.1103	0.3897
0.29	0.1141	0.3859
0.30	0.1179	0.3821
0.31	0.1217	0.3783
0.32	0.1255	0.3745
0.33	0.1293	0.3707
0.34	0.1331	0.3669
0.35	0.1368	0.3632
0.36	0.1406	0.3594
0.37	0.1443	0.3557
0.38	0.1480	0.3520
0.39	0.1517	0.3483
0.40	0.1554	0.3446
0.41	0.1591	0.3409
0.42	0.1628	0.3372
0.43	0.1664	0.3336
0.44	0.1700	0.3300
0.45	0.1736	0.3264
0.46	0.1772	0.3228
0.47	0.1808	0.3192
0.48	0.1844	0.3156
0.49	0.1879	0.3121
0.50	0.1915	0.3085
0.51	0.1950	0.3050
0.52	0.1985	0.3015
0.53	0.2019	0.2981
0.54	0.2054	0.2946
0.55	0.2088	0.2912
0.56	0.2123	0.2877
0.57	0.2157	0.2843
0.58	0.2190	0.2810
0.59	0.2224	0.2776
0.60	0.2257	0.2743
0.61	0.2291	0.2709
0.62	0.2324	0.2676
0.63	0.2357	0.2643
0.64	0.2389	0.2611
0.65	0.2422	0.2578
0.66	0.2454	0.2546
0.67	0.2486	0.2514
0.68	0.2517	0.2483
0.69	0.2549	0.2451
0.70	0.2580	0.2420
0.71	0.2611	0.2389
0.72	0.2642	0.2358
0.73	0.2673	0.2327
0.74	0.2704	0.2296
0.75	0.2734	0.2266
0.76	0.2764	0.2236
0.77	0.2794	0.2206
0.78	0.2823	0.2177
0.79	0.2852	0.2148
0.80	0.2881	0.2119
0.81	0.2910	0.2090
0.82	0.2939	0.2061
0.83	0.2967	0.2033
0.84	0.2995	0.2005
0.85	0.3023	0.1977
0.86	0.3051	0.1949
0.87	0.3078	0.1922
0.88	0.3106	0.1894
0.89	0.3133	0.1867
0.90	0.3159	0.1841
0.91	0.3186	0.1814
0.92	0.3212	0.1788
0.93	0.3238	0.1762
0.94	0.3264	0.1736
0.95	0.3289	0.1711
0.96	0.3315	0.1685
0.97	0.3340	0.1660
0.98	0.3365	0.1635
0.99	0.3389	0.1611
1.00	0.3413	0.1587
1.01	0.3438	0.1562
1.02	0.3461	0.1539
1.03	0.3485	0.1515
1.04	0.3508	0.1492
1.05	0.3531	0.1469
1.06	0.3554	0.1446
1.07	0.3577	0.1423
1.08	0.3599	0.1401
1.09	0.3621	0.1379
1.10	0.3643	0.1357
1.11	0.3665	0.1335
1.12	0.3686	0.1314
1.13	0.3708	0.1292
1.14	0.3729	0.1271
1.15	0.3749	0.1251
1.16	0.3770	0.1230
1.17	0.3790	0.1210
1.18	0.3810	0.1190
1.19	0.3830	0.1170
1.20	0.3849	0.1151
1.21	0.3869	0.1131
1.22	0.3888	0.1112
1.23	0.3907	0.1093
1.24	0.3925	0.1075
1.25	0.3944	0.1056
1.26	0.3962	0.1038
1.27	0.3980	0.1020
1.28	0.3997	0.1003
1.29	0.4015	0.0985
1.30	0.4032	0.0968
1.31	0.4049	0.0951
1.32	0.4066	0.0934
1.33	0.4082	0.0918
1.34	0.4099	0.0901
1.35	0.4115	0.0885
1.36	0.4131	0.0869
1.37	0.4147	0.0853
1.38	0.4162	0.0838
1.39	0.4177	0.0823
1.40	0.4192	0.0808
1.41	0.4207	0.0793
1.42	0.4222	0.0778
1.43	0.4236	0.0764
1.44	0.4251	0.0749
1.45	0.4265	0.0735
1.46	0.4279	0.0721
1.47	0.4292	0.0708
1.48	0.4306	0.0694
1.49	0.4319	0.0681
1.50	0.4332	0.0668
1.51	0.4345	0.0655
1.52	0.4357	0.0643
1.53	0.4370	0.0630
1.54	0.4382	0.0618
1.55	0.4394	0.0606
1.56	0.4406	0.0594
1.57	0.4418	0.0582
1.58	0.4429	0.0571
1.59	0.4441	0.0559
1.60	0.4452	0.0548
1.61	0.4463	0.0537
1.62	0.4474	0.0526
1.63	0.4484	0.0516
1.64	0.4495	0.0505
1.65	0.4505	0.0495
1.66	0.4515	0.0485
1.67	0.4525	0.0475
1.68	0.4535	0.0465
1.69	0.4545	0.0455
1.70	0.4554	0.0446
1.71	0.4564	0.0436
1.72	0.4573	0.0427
1.73	0.4582	0.0418
1.74	0.4591	0.0409
1.75	0.4599	0.0401
1.76	0.4608	0.0392
1.77	0.4616	0.0384
1.78	0.4625	0.0375
1.79	0.4633	0.0367
1.80	0.4641	0.0359
1.81	0.4649	0.0351
1.82	0.4656	0.0344
1.83	0.4664	0.0336
1.84	0.4671	0.0329
1.85	0.4678	0.0322
1.86	0.4686	0.0314
1.87	0.4693	0.0307
1.88	0.4699	0.0301
1.89	0.4706	0.0294
1.90	0.4713	0.0287
1.91	0.4719	0.0281
1.92	0.4726	0.0274
1.93	0.4732	0.0268
1.94	0.4738	0.0262
1.95	0.4744	0.0256
1.96	0.4750	0.0250
1.97	0.4756	0.0244
1.98	0.4761	0.0239
1.99	0.4767	0.0233
2.00	0.4772	0.0228
2.01	0.4778	0.0222
2.02	0.4783	0.0217
2.03	0.4788	0.0212
2.04	0.4793	0.0207
2.05	0.4798	0.0202
2.06	0.4803	0.0197
2.07	0.4808	0.0192
2.08	0.4812	0.0188
2.09	0.4817	0.0183
2.10	0.4821	0.0179
2.11	0.4826	0.0174
2.12	0.4830	0.0170
2.13	0.4834	0.0166
2.14	0.4838	0.0162
2.15	0.4842	0.0158
2.16	0.4846	0.0154
2.17	0.4850	0.0150
2.18	0.4854	0.0146
2.19	0.4857	0.0143
2.20	0.4861	0.0139
2.21	0.4864	0.0136
2.22	0.4868	0.0132
2.23	0.4871	0.0129
2.24	0.4875	0.0125
2.25	0.4878	0.0122
2.26	0.4881	0.0119
2.27	0.4884	0.0116
2.28	0.4887	0.0113
2.29	0.4890	0.0110
2.30	0.4893	0.0107
2.31	0.4896	0.0104
2.32	0.4898	0.0102
2.33	0.4901	0.0099
2.34	0.4904	0.0096
2.35	0.4906	0.0094
2.36	0.4909	0.0091
2.37	0.4911	0.0089
2.38	0.4913	0.0087
2.39	0.4916	0.0084
2.40	0.4918	0.0082
2.41	0.4920	0.0080
2.42	0.4922	0.0078
2.43	0.4925	0.0075
2.44	0.4927	0.0073
2.45	0.4929	0.0071
2.46	0.4931	0.0069
2.47	0.4932	0.0068
2.48	0.4934	0.0066
2.49	0.4936	0.0064
2.50	0.4938	0.0062
2.51	0.4940	0.0060
2.52	0.4941	0.0059
2.53	0.4943	0.0057
2.54	0.4945	0.0055
2.55	0.4946	0.0054
2.56	0.4948	0.0052
2.57	0.4949	0.0051
2.58	0.4951	0.0049
2.59	0.4952	0.0048
2.60	0.4953	0.0047
2.61	0.4955	0.0045
2.62	0.4956	0.0044
2.63	0.4957	0.0043
2.64	0.4959	0.0041
2.65	0.4960	0.0040
2.66	0.4961	0.0039
2.67	0.4962	0.0038
2.68	0.4963	0.0037
2.69	0.4964	0.0036
2.70	0.4965	0.0035
2.71	0.4966	0.0034
2.72	0.4967	0.0033
2.73	0.4968	0.0032
2.74	0.4969	0.0031
2.75	0.4970	0.0030
2.76	0.4971	0.0029
2.77	0.4972	0.0028
2.78	0.4973	0.0027
2.79	0.4974	0.0026
2.80	0.4974	0.0026
2.81	0.4975	0.0025
2.82	0.4976	0.0024
2.83	0.4977	0.0023
2.84	0.4977	0.0023
2.85	0.4978	0.0022
2.86	0.4979	0.0021
2.87	0.4979	0.0021
2.88	0.4980	0.0020
2.89	0.4981	0.0019
2.90	0.4981	0.0019
2.91	0.4982	0.0018
2.92	0.4982	0.0018
2.93	0.4983	0.0017
2.94	0.4984	0.0016
2.95	0.4984	0.0016
2.96	0.4985	0.0015
2.97	0.4985	0.0015
2.98	0.4986	0.0014
2.99	0.4986	0.0014
3.00	0.4987	0.0013
3.01	0.4987	0.0013
3.02	0.4987	0.0013
3.03	0.4988	0.0012
3.04	0.4988	0.0012
3.05	0.4989	0.0011
3.06	0.4989	0.0011
3.07	0.4989	0.0011
3.08	0.4990	0.0010
3.09	0.4990	0.0010
3.10	0.4990	0.0010
3.11	0.4991	0.0009
3.12	0.4991	0.0009
3.13	0.4991	0.0009
3.14	0.4992	0.0008
3.15	0.4992	0.0008
3.16	0.4992	0.0008
3.17	0.4992	0.0008
3.18	0.4993	0.0007
3.19	0.4993	0.0007
3.20	0.4993	0.0007
3.21	0.4993	0.0007
3.22	0.4994	0.0006
3.23	0.4994	0.0006
3.24	0.4994	0.0006
3.25	0.4994	0.0006
'''
triples = [line.split("\t") for line in s.split("\n")]
zToFractDict = {float(trip[0]): float(trip[2]) for trip in triples if len(trip) == 3}
zinterval = 0.01
zmax = 3.25

sortedPairs = sorted([(value, key) for key, value in zToFractDict.items()], cmp = lambda x, y: cmp(x[0], y[0]))
fractToZDict = {}

fractInterval = 0.001
i = 0
for val in [0.001 * (n + 1) for n in range(int(0.5 / fractInterval))]:
	val = round(val, 3)
	if sortedPairs[i][0] < val:
		while sortedPairs[i][0] < val:
			i += 1
	if sortedPairs[i][0] == val:
		fractToZDict[val] = sortedPairs[i][1]
	elif sortedPairs[i][0] > val:
		fractToZDict[val] = (sortedPairs[i][1] * (val - sortedPairs[i - 1][0]) + sortedPairs[i - 1][1] * (sortedPairs[i][0] - val)) / ((sortedPairs[i][0] - val) + (val - sortedPairs[i - 1][0]))

def z_to_fraction(z):
	if z > zmax:
		return 0
	if z < 0 or z > zmax:
		raise ValueError("z [num std deviations] must be between 0 and " + str(zmax))
	rounded = round(z, 2)
	if rounded == z:
		return zToFractDict[rounded]
	elif z > rounded:
		return (zToFractDict[round(rounded + zinterval, 2)] * (z - rounded) + zToFractDict[rounded] * (rounded + zinterval - z)) / zinterval
	else: #z < rounded
		return (zToFractDict[round(rounded - zinterval, 2)] * (rounded - z) + zToFractDict[rounded] * (z - rounded + zinterval)) / zinterval

def fraction_to_z(fraction):
	if fraction < 0 or fraction > 0.5:
		raise ValueError("one-tailed fraction must be between 0 and 0.5")
	rounded = round(fraction, 3)
	if rounded == 0:
		return float("inf")
	if rounded == fraction:
		return fractToZDict[rounded]
	elif fraction > rounded:
		return (fractToZDict[round(rounded + fractInterval, 3)] * (fraction - rounded) + fractToZDict[rounded] * (rounded + fractInterval - fraction)) / fractInterval
	else: #fraction < rounded
		return (fractToZDict[round(rounded - fractInterval, 3)] * (rounded - fraction) + fractToZDict[rounded] * (fraction - rounded + fractInterval)) / fractInterval
